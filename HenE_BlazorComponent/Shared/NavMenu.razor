@inject NavigationManager NavigationManager
<div class="top-row pl-4 navbar">
    <a class="navbar-brand" href="">BlazorComponent</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass list-group collapse" @onclick="ToggleNavMenu">
    @foreach (Formulier huidigeformulier in formulieren)
    {
        <ol class="nav" style="overflow:visible">

            <li class="nav-item">
                <NavLink class="nav-link" @onclick="(()=>ToggleDataList(huidigeformulier))" style="font-size:18px" href="@GetUrl(huidigeformulier)">

                    <span aria-hidden="true"></span>@huidigeformulier.Titel
                </NavLink>
            </li>
            @if (formulier == huidigeformulier)
            {
                @if (formulierElementenGroup != null)
                {
                    @foreach (var sections in formulierElementenGroup)
                    {
                        @foreach (FormulierSectie section in sections)
                        {
                            <li class="custom active pl-3 border-bottom list-unstyled" style="font-size:medium">
                                @if (section is FormulierSectie)
                                {
                                    FormulierSectie sectie = section as FormulierSectie;
                                    <NavLink class="nav-link" href="@GetUrl(section,huidigeformulier)" Match="NavLinkMatch.All">
                                        <span class="text-light" aria-hidden="true" style="font-size:13px">
                                            @(sectie.Title)
                                        </span>
                                    </NavLink>
                                }
                            </li>
                        }
                    }
                }
            }
        </ol>
    }

    @*
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="base" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="bootstrap">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Bootstrap
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="registreren">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Registreren
                </NavLink>
            </li>
            <li class=" px-3">
                <NavLink class="nav-link" href="baseControllerFormulier/1">
                    <span class="oi oi-book" aria-hidden="true"></span>Aangift DividendBelasting
                </NavLink>
            </li>
            <li class=" px-3">
                <NavLink class="nav-link" href="baseControllerFormulier/2">
                    <span class="oi oi-book" aria-hidden="true"></span>Aangift Schenkbelasting
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="apiFormulier">
                    <span class="oi oi-book" aria-hidden="true"></span> API Formulier
                </NavLink>
            </li>
            <li class=" px-3">
                <NavLink class="nav-link" href="#" @onclick="ToggleDataList">
                    <span class="oi oi-book" aria-hidden="true"></span>Aangift DividendBelasting
                </NavLink>
            </li>
            <li class=" px-3">
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="timePicker">
                    <span class="oi oi-clock" aria-hidden="true"></span> Time
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="grid">
                    <span class="oi oi-book" aria-hidden="true"></span> Grid
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="inPlaceEditor">
                    <span class="oi oi-bookmark" aria-hidden="true"></span> inPlaceEditoI
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="tooltip">
                    <span class="oi oi-pulse" aria-hidden="true"></span> Tooltip
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="sidebar">
                    <span class="oi oi-badge" aria-hidden="true"></span> Sidebar
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="toast">
                    <span class="oi oi-badge" aria-hidden="true"></span> Toast
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="toast1">
                    <span class="oi oi-badge" aria-hidden="true"></span> Toast Twee
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="dialog">
                    <span class="oi oi-dial" aria-hidden="true"></span> Dialog
                </NavLink>
            </li>
        </ul>*@
</div>

@code {
    private bool collapseNavMenu = true;
    FormulierController controller = new FormulierController();
    Formulier formulier;
    Formulier oldFormulier;
    List<Formulier> formulieren;
    dynamic formulierElementenGroup { get; set; }
    public ExpandOnSettings Expand = ExpandOnSettings.Click;
    string HashTagName = "#0";

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        ///Get de controller.
        FormulierController controller = new FormulierController();

        // Eerst bring de data van de eerste formulier aan.
        //formulier = controller.GetData(0);

        //oldFormulier = formulier;
        // Eerst bring de formulieren die beschikbaar zijn.
        formulieren = controller.GetFormuliers();
    }

    /// <summary>
    /// verandert de situatie van de slidebar.
    /// </summary>
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        StateHasChanged();
    }

    /// <summary>
    /// Toon of verstoppen de data van een formulier.
    /// </summary>
    private void ToggleDataList(Formulier huidigeFormulier)
    {
        if (huidigeFormulier != formulier)
        {
            oldFormulier = formulier;
        }

        formulier = huidigeFormulier;
        if (formulierElementenGroup == null)
        {
            // bringt de element van de huidige formulier.
            // Sorteert de element bij groepen.
            formulierElementenGroup = formulier.Kinderen.GroupBy(G => G.Row).OrderBy(O => O.Key).ToArray();
        }
        else
        {
            formulierElementenGroup = null;
        }

        StateHasChanged();

    }



    /// <summary>
    /// Verzamelt de URL delen in een URL.
    /// </summary>
    /// <param name="item"></param>
    /// <returns></returns>
    private string GetUrl(FormulierSectie sectie, Formulier huidigeFormulierVanUitNav)
    {                int FormulierNummer = -1;
        @foreach (Formulier huidigeFormulier in formulieren)
        {
            FormulierNummer++;
            if (huidigeFormulierVanUitNav == huidigeFormulier)
            {
                @foreach (FormulierSectie huidigeSectie in huidigeFormulier.Kinderen)
                {
                    if (sectie == huidigeSectie)
                    {
                        return HashTagName ="/" + FormulierNummer.ToString()+ "#" + huidigeSectie.SectionNumber.ToString();
                    }
                }
            }
        }
        @*if (item is FormulierSectie)
            {
                FormulierSectie sectie = (FormulierSectie)item;
                HashTagName = "#" + sectie.SectionNumber.ToString();
            }*@

        return HashTagName;

    }

    /// <summary>
    /// Verzamelt de URL delen in een URL.
    /// </summary>
    /// <param name="item"></param>
    /// <returns></returns>
    private string GetUrl(Formulier huidigeFormulier)
    {
        int FormulierNummer = -1;

        @foreach (Formulier Eenformulier in formulieren)
        {
            FormulierNummer++;
            if (huidigeFormulier != oldFormulier)
            {
                if (huidigeFormulier == Eenformulier)
                {
                    oldFormulier = huidigeFormulier;
                    return HashTagName = "/" + FormulierNummer.ToString();
                }

            }
        }
        return "";
    }
}

<style>

    .custom {
        width: 100%;
        opacity: 0.7;
    }
</style>